{
  "id":"com.sscp:sscp.all:slingosgifeature:1.0.0-SNAPSHOT",
  "bundles":[
    {
      "id":"com.sscp:sscp.core:1.0.0-SNAPSHOT",
      "start-order":"20",
      "content-package-origins":"com.sscp:sscp.all:1.0.0-SNAPSHOT"
    },
    {
      "id":"dev.aemvite:aem-vite.core:2.2.2",
      "start-order":"20",
      "content-package-origins":"com.sscp:sscp.all:1.0.0-SNAPSHOT|dev.aemvite:aem-vite.all:2.2.2"
    },
    {
      "id":"org.apache.commons:commons-text:1.10.0",
      "start-order":"20",
      "content-package-origins":"com.sscp:sscp.all:1.0.0-SNAPSHOT"
    },
    {
      "id":"org.jsoup:jsoup:1.14.3",
      "start-order":"20",
      "content-package-origins":"com.sscp:sscp.all:1.0.0-SNAPSHOT"
    },
    {
      "id":"com.adobe.acs:acs-aem-commons-bundle:5.3.2",
      "start-order":"20",
      "content-package-origins":"com.sscp:sscp.all:1.0.0-SNAPSHOT|adobe/consulting:acs-aem-commons-content:5.3.2"
    }
  ],
  "configurations":  {
    "com.adobe.acs.commons.errorpagehandler.impl.ErrorPageHandlerImpl":    {
      "enabled":true,
      "cache.serve-authenticated":true,
      "cache.ttl":300,
      ":configurator:content-package-origins":"com.sscp:sscp.all:1.0.0-SNAPSHOT|com.sscp:sscp.ui.config:1.0.0-SNAPSHOT"
    },
    "com.adobe.granite.ui.clientlibs.impl.HtmlLibraryManagerImpl":    {
      "htmllibmanager.strict.versioning":true,
      "htmllibmanager.minify":true,
      "htmllibmanager.processor.js":"min:gcc",
      "htmllibmanager.processor.css":"min:gcc",
      "htmllibmanager.longcache.patterns":[
        "/.*;hash"
      ],
      "htmllibmanager.longcache.format":"lc-%s-lc",
      ":configurator:content-package-origins":"com.sscp:sscp.all:1.0.0-SNAPSHOT|com.sscp:sscp.ui.config:1.0.0-SNAPSHOT"
    },
    "com.sscp.core.services.impl.GlobalConfigurationServiceImpl":    {
      "baseApiUrl":"https://api-sit4.powertorquefinance.com.au",
      "dynatraceUrl":"$[env:DYNATRACE_URI]",
      "forgerockUrl":"https://openam-tfs-anz-staging.id.forgerock.io/am",
      "forgerockRealm":"bravo",
      "forgerockClientId":"SSCP",
      "questApiKey":"QVLrs3h8uj3Np1q178JbEahj1mtfcAZB2o6WZknF",
      ":configurator:content-package-origins":"com.sscp:sscp.all:1.0.0-SNAPSHOT|com.sscp:sscp.ui.config:1.0.0-SNAPSHOT"
    },
    "org.apache.sling.commons.log.LogManager.factory.config~sscp":    {
      "org.apache.sling.commons.log.pattern":"{0,date,yyyy-MM-dd HH:mm:ss.SSS} {4} [{3}] {5}",
      "org.apache.sling.commons.log.names":[
        "com.sscp"
      ],
      "org.apache.sling.commons.log.level":"debug",
      "org.apache.sling.commons.log.file":"logs/error.log",
      "org.apache.sling.commons.log.additiv":"true",
      ":configurator:content-package-origins":"com.sscp:sscp.all:1.0.0-SNAPSHOT|com.sscp:sscp.ui.config:1.0.0-SNAPSHOT"
    },
    "org.apache.sling.serviceusermapping.impl.ServiceUserMapperImpl.amended~sscp":    {
      "service.ranking":0,
      "user.default":"admin",
      "user.mapping":[
        "com.sscp.sscp.core:sscp-system=[sscp-system]",
        "com.sscp.core:content-services=[repository-reader-service]",
        "com.sscp.core=[repository-reader-service]",
        "org.apache.sling.models.impl:sscp-system=[sscp-system]"
      ],
      ":configurator:content-package-origins":"com.sscp:sscp.all:1.0.0-SNAPSHOT|com.sscp:sscp.ui.config:1.0.0-SNAPSHOT"
    },
    "org.apache.sling.serviceusermapping.impl.ServiceUserMapperImpl.amended~aem-vite":    {
      "service.ranking":0,
      "user.mapping":[
        "dev.aemvite.aem-vite.core:aemViteClientLibsService=aem-vite-clientlibs",
        "aem-precompiled-scripts:aemViteClientLibsService=aem-vite-clientlibs"
      ],
      ":configurator:content-package-origins":"com.sscp:sscp.all:1.0.0-SNAPSHOT|dev.aemvite:aem-vite.all:2.2.2|dev.aemvite:aem-vite.ui.config:2.2.2"
    },
    "org.apache.sling.commons.log.LogManager.factory.config~aem-vite":    {
      "org.apache.sling.commons.log.pattern":"{0,date,yyyy-MM-dd HH:mm:ss.SSS} *{4}* [{2}] {3} {5}",
      "org.apache.sling.commons.log.names":[
        "dev.aemvite"
      ],
      "org.apache.sling.commons.log.level":"info",
      "org.apache.sling.commons.log.file":"logs/aem-vite.log",
      "org.apache.sling.commons.log.additiv":"false",
      ":configurator:content-package-origins":"com.sscp:sscp.all:1.0.0-SNAPSHOT|dev.aemvite:aem-vite.all:2.2.2|dev.aemvite:aem-vite.ui.config:2.2.2"
    },
    "org.apache.sling.serviceusermapping.impl.ServiceUserMapperImpl.amended~acs-commons":    {
      "user.mapping":[
        "com.adobe.acs.acs-aem-commons-bundle:ensure-oak-index=[acs-commons-ensure-oak-index-service]",
        "com.adobe.acs.acs-aem-commons-bundle:email-service=[acs-commons-email-service]",
        "com.adobe.acs.acs-aem-commons-bundle:httpcache-jcr-storage-service=[acs-commons-httpcache-jcr-storage-service]",
        "com.adobe.acs.acs-aem-commons-bundle:review-task-asset-mover=[acs-commons-review-task-asset-mover-service]",
        "com.adobe.acs.acs-aem-commons-bundle:error-page-handler=[acs-commons-error-page-handler-service]",
        "com.adobe.acs.acs-aem-commons-bundle:form-helper=[acs-commons-form-helper-service]",
        "com.adobe.acs.acs-aem-commons-bundle:dispatcher-flush=[acs-commons-dispatcher-flush-service]",
        "com.adobe.acs.acs-aem-commons-bundle:package-replication-status-event-listener=[acs-commons-package-replication-status-event-service]",
        "com.adobe.acs.acs-aem-commons-bundle:component-error-handler=[acs-commons-component-error-handler-service]",
        "com.adobe.acs.acs-aem-commons-bundle:system-notifications=[acs-commons-system-notifications-service]",
        "com.adobe.acs.acs-aem-commons-bundle:twitter-updater=[acs-commons-twitter-updater-service]",
        "com.adobe.acs.acs-aem-commons-bundle:workflow-remover=[acs-commons-workflow-remover-service]",
        "com.adobe.acs.acs-aem-commons-bundle:bulk-workflow=[acs-commons-bulk-workflow-service]",
        "com.adobe.acs.acs-aem-commons-bundle:bulk-workflow-runner=[workflow-process-service]",
        "com.adobe.acs.acs-aem-commons-bundle:ensure-service-user=[acs-commons-ensure-service-user-service]",
        "com.adobe.acs.acs-aem-commons-bundle:shared-component-props=[acs-commons-shared-component-props-service]",
        "com.adobe.acs.acs-aem-commons-bundle:manage-controlled-processes=[acs-commons-manage-controlled-processes-service]",
        "com.adobe.acs.acs-aem-commons-bundle:automatic-package-replicator=[acs-commons-automatic-package-replicator-service]",
        "com.adobe.acs.acs-aem-commons-bundle:on-deploy-scripts=[acs-commons-on-deploy-scripts-service]",
        "com.adobe.acs.acs-aem-commons-bundle:remote-assets=[acs-commons-remote-assets-service]",
        "com.adobe.acs.acs-aem-commons-bundle:workflowpackagemanager-service=[acs-commons-workflowpackagemanager-service]",
        "com.adobe.acs.acs-aem-commons-bundle:redirect-manager=[acs-commons-manage-redirects-service]",
        "com.adobe.acs.acs-aem-commons-bundle:file-fetch=[acs-commons-file-fetch-service]",
        "com.adobe.acs.acs-aem-commons-bundle:marketo-conf=[acs-commons-marketo-conf-service]"
      ],
      ":configurator:content-package-origins":"com.sscp:sscp.all:1.0.0-SNAPSHOT|adobe/consulting:acs-aem-commons-content:5.3.2"
    }
  },
  "content-packages:ARTIFACTS|true":[
    "com.sscp:sscp.ui.apps:zip:cp2fm-converted:1.0.0-SNAPSHOT",
    "com.sscp:sscp.ui.frontend:zip:cp2fm-converted:1.0.0-SNAPSHOT",
    "com.sscp:sscp.ui.config:zip:cp2fm-converted:1.0.0-SNAPSHOT",
    "com.sscp:sscp.ui.content:zip:cp2fm-converted:1.0.0-SNAPSHOT",
    "dev.aemvite:aem-vite.ui.apps:zip:cp2fm-converted:2.2.2",
    "dev.aemvite:aem-vite.ui.config:zip:cp2fm-converted:2.2.2",
    "dev.aemvite:aem-vite.all:zip:cp2fm-converted:2.2.2",
    "adobe.consulting:acs-aem-commons-ui.apps:zip:cp2fm-converted:5.3.2",
    "adobe.consulting:acs-aem-commons-ui.content:zip:cp2fm-converted:5.3.2",
    "adobe.consulting:acs-aem-commons-content:zip:cp2fm-converted:5.3.2",
    "com.sscp:sscp.all:zip:cp2fm-converted:1.0.0-SNAPSHOT"
  ],
  "repoinit:TEXT|true":[
    "create path /apps/sscp(sling:Folder)",
    "  create path (sling:Folder) /content/dam(sling:Folder)/jcr:content(nt:unstructured)",
    "  create path (sling:OrderedFolder) /content/dam/sscp",
    "  create path (nt:unstructured) /content/dam/sscp/jcr:content",
    "  create path (sling:OrderedFolder) /content/sscp(cq:Page)/jcr:content(cq:PageContent)",
    "",
    "  create path (sling:OrderedFolder) /tmp/content/",
    "  create path (sling:OrderedFolder) /tmp/content/vue",
    "",
    "  create path (sling:OrderedFolder) /content/sscp(cq:Page)/toyota(cq:Page)",
    "  create path (sling:OrderedFolder) /content/sscp(cq:Page)/powertorque(cq:Page)",
    "  create path (sling:OrderedFolder) /content/sscp(cq:Page)/hino(cq:Page)",
    "  create path (sling:OrderedFolder) /content/sscp(cq:Page)/lexus(cq:Page)",
    "  create path (sling:OrderedFolder) /content/sscp(cq:Page)/blueprint(cq:Page)",
    "  create path (sling:OrderedFolder) /content/sscp(cq:Page)/showcase(cq:Page)",
    "  create path (sling:OrderedFolder) /content/sscp(cq:Page)/suzuki(cq:Page)",
    "  create path (sling:OrderedFolder) /content/sscp(cq:Page)/mazda(cq:Page)",
    "  create path (sling:OrderedFolder) /content/sscp(cq:Page)/power-alliance(cq:Page)",
    "",
    "",
    "  create service user sscp-system with path /home/users/system",
    "  set ACL on /apps/sscp",
    "    allow jcr:all for sscp-system",
    "  end",
    "  set ACL on /content",
    "    allow jcr:read for sscp-system",
    "  end",
    "  set ACL on /tmp",
    "    allow jcr:read for sscp-system",
    "  end\r",
    "create service user aem-vite-clientlibs with path /home/users/system\r",
    "# These paths must exist otherwise the following ACL applicaiton will fail, resulting in err'ing build ",
    "create path /content/cq:tags(sling:Folder)",
    "create path /etc/packages(sling:Folder)",
    "",
    "# create default contextual configuration for redirects: /conf/global/settings/redirects",
    "create path /conf/global(sling:Folder)",
    "create path /conf/global/settings(sling:Folder)",
    "create path /conf/global/settings/redirects(nt:unstructured)",
    "",
    "# Not supported in 6.4.8",
    "#set properties on /conf/global/settings/redirects",
    "#  set sling:resourceType{String} to acs-commons/components/utilities/manage-redirects/redirects",
    "#end",
    "",
    "# user to invalidate cached redirects on change",
    "create service user acs-commons-manage-redirects-service with path system/acs-aem-commons",
    "set ACL for acs-commons-manage-redirects-service",
    "    allow jcr:read on /",
    "    allow jcr:read on /conf",
    "end",
    "",
    "# Marketo config service needs to be able to read /conf and /content",
    "create service user acs-commons-marketo-conf-service with path system/acs-commons",
    "set ACL for acs-commons-marketo-conf-service",
    "    allow jcr:read on /conf",
    "    allow jcr:read on /content",
    "end",
    "",
    "# web requests need read access to redirect configurations, e.g. /conf/global/settings/redirects",
    "set ACL for anonymous",
    "    allow jcr:read on /conf  restriction(rep:glob,/*/settings/redirects)",
    "end",
    "",
    "create service user acs-commons-automatic-package-replicator-service with path system/acs-commons",
    "set ACL for acs-commons-automatic-package-replicator-service",
    "    allow jcr:read,jcr:versionManagement,rep:write,crx:replicate on /etc/packages",
    "    allow jcr:read on /",
    "end",
    "",
    "create service user acs-commons-file-fetch-service with path system/acs-aem-commons",
    "set ACL for acs-commons-file-fetch-service",
    "    allow jcr:read,jcr:versionManagement,rep:write,crx:replicate on /content/dam",
    "    allow jcr:read on /",
    "end",
    "",
    "create service user acs-commons-remote-assets-service with path system/acs-aem-commons",
    "set ACL for acs-commons-remote-assets-service",
    "    allow jcr:read, jcr:versionManagement, rep:write, crx:replicate on /content/cq:tags",
    "    allow jcr:read, jcr:versionManagement, rep:write, crx:replicate on /content/dam",
    "    allow jcr:read on /",
    "",
    "    # If /etc/tags is used, these ACLs be set manually - if RepoInit defines this structure, it supersedes the use of /content/cq:tags",
    "    # allow jcr:read, jcr:versionManagement, rep:write, crx:replicate on /etc/tags",
    "end\r",
    "create service user acs-commons-dispatcher-flush-service with path system/acs-commons",
    "set ACL for acs-commons-dispatcher-flush-service",
    "    allow jcr:read,crx:replicate,jcr:removeNode on /",
    "end",
    "",
    "create service user acs-commons-ensure-service-user-service with path system/acs-commons",
    "set ACL for acs-commons-ensure-service-user-service",
    "    allow jcr:read,rep:write,jcr:readAccessControl,jcr:modifyAccessControl on /",
    "end",
    "",
    "create service user acs-commons-on-deploy-scripts-service with path system/acs-commons",
    "set ACL for acs-commons-on-deploy-scripts-service",
    "    allow jcr:read on /",
    "end\r",
    "# these users and ACLs are only necessary on author",
    "create service user acs-commons-workflow-remover-service with path system/acs-commons",
    "# the path may not yet exist in AEMaaCS as it is created lazily",
    "create path /var/workflow/instances(sling:Folder)",
    "set ACL for acs-commons-workflow-remover-service",
    "    allow jcr:read, rep:write on /var/workflow/instances",
    "end",
    "",
    "create service user acs-commons-workflowpackagemanager-service with path system/acs-commons",
    "# the path may not yet exist in AEMaaCS as it is created lazily",
    "create path /var/workflow/packages(sling:Folder)",
    "set ACL for acs-commons-workflowpackagemanager-service",
    "    allow jcr:read on /var/workflow/packages",
    "end\r",
    "create service user acs-commons-ensure-oak-index-service with path system/acs-commons",
    "set ACL for acs-commons-ensure-oak-index-service",
    "    allow jcr:read,rep:write,rep:indexDefinitionManagement on /oak:index",
    "end\r",
    "register nodetypes\r",
    "<<===\r",
    "<< <'nt'='http://www.jcp.org/jcr/nt/1.0'>\r",
    "<< <'jcr'='http://www.jcp.org/jcr/1.0'>\r",
    "<< <'mix'='http://www.jcp.org/jcr/mix/1.0'>\r",
    "<< <'sling'='http://sling.apache.org/jcr/sling/1.0'>\r",
    "\r",
    "<< [nt:file] > nt:hierarchyNode\r",
    "<<   primaryitem jcr:content\r",
    "<<   + jcr:content (nt:base) mandatory\r",
    "\r",
    "<< [nt:hierarchyNode] > mix:created\r",
    "<<   abstract\r",
    "\r",
    "<< [mix:created]\r",
    "<<   mixin\r",
    "<<   - jcr:createdBy (string) autocreated protected\r",
    "<<   - jcr:created (date) autocreated protected\r",
    "\r",
    "<< [nt:base]\r",
    "<<   abstract\r",
    "<<   - jcr:mixinTypes (name) protected multiple compute\r",
    "<<   - jcr:primaryType (name) mandatory autocreated protected compute\r",
    "\r",
    "<< [nt:folder] > nt:hierarchyNode\r",
    "<<   + * (nt:hierarchyNode) version\r",
    "\r",
    "<< [sling:OsgiConfig] > nt:hierarchyNode, nt:unstructured\r",
    "\r",
    "<< [nt:unstructured]\r",
    "<<   orderable\r",
    "<<   - * (undefined)\r",
    "<<   - * (undefined) multiple\r",
    "<<   + * (nt:base) = nt:unstructured multiple version\r",
    "===>>\r",
    "register nodetypes\r",
    "<<===\r",
    "<< <'sling'='http://sling.apache.org/jcr/sling/1.0'>\r",
    "<< <'nt'='http://www.jcp.org/jcr/nt/1.0'>\r",
    "<< <'mix'='http://www.jcp.org/jcr/mix/1.0'>\r",
    "<< <'jcr'='http://www.jcp.org/jcr/1.0'>\r",
    "<< <'cq'='http://www.day.com/jcr/cq/1.0'>\r",
    "<< <'oak'='http://jackrabbit.apache.org/oak/ns/1.0'>\r",
    "<< <'rep'='internal'>\r",
    "\r",
    "<< [sling:Folder] > nt:folder\r",
    "<<   - * (undefined)\r",
    "<<   - * (undefined) multiple\r",
    "<<   + * (nt:base) = sling:Folder version\r",
    "\r",
    "<< [nt:folder] > nt:hierarchyNode\r",
    "<<   + * (nt:hierarchyNode) version\r",
    "\r",
    "<< [nt:hierarchyNode] > mix:created\r",
    "<<   abstract\r",
    "\r",
    "<< [mix:created]\r",
    "<<   mixin\r",
    "<<   - jcr:createdBy (string) autocreated protected\r",
    "<<   - jcr:created (date) autocreated protected\r",
    "\r",
    "<< [nt:base]\r",
    "<<   abstract\r",
    "<<   - jcr:mixinTypes (name) protected multiple compute\r",
    "<<   - jcr:primaryType (name) mandatory autocreated protected compute\r",
    "\r",
    "<< [cq:TabPanel] > cq:Panel\r",
    "<<   orderable\r",
    "<<   - activeTab (long)\r",
    "\r",
    "<< [cq:Panel] > cq:Widget\r",
    "<<   orderable\r",
    "\r",
    "<< [cq:Widget] > nt:unstructured\r",
    "<<   orderable\r",
    "<<   - xtype (string)\r",
    "<<   - title (string)\r",
    "<<   - name (string)\r",
    "<<   + items (nt:base) = cq:WidgetCollection\r",
    "\r",
    "<< [nt:unstructured]\r",
    "<<   orderable\r",
    "<<   - * (undefined)\r",
    "<<   - * (undefined) multiple\r",
    "<<   + * (nt:base) = nt:unstructured multiple version\r",
    "\r",
    "<< [cq:WidgetCollection] > nt:unstructured\r",
    "<<   orderable\r",
    "<<   + * (cq:Widget) = cq:Widget\r",
    "\r",
    "<< [nt:unstructured]\r",
    "<<   orderable\r",
    "<<   - * (undefined)\r",
    "<<   - * (undefined) multiple\r",
    "<<   + * (nt:base) = nt:unstructured multiple version\r",
    "\r",
    "<< [nt:file] > nt:hierarchyNode\r",
    "<<   primaryitem jcr:content\r",
    "<<   + jcr:content (nt:base) mandatory\r",
    "\r",
    "<< [sling:VanityPath]\r",
    "<<   mixin\r",
    "<<   - sling:vanityOrder (long)\r",
    "<<   - sling:redirect (boolean)\r",
    "<<   - sling:vanityPath (string) multiple\r",
    "<<   - sling:redirectStatus (long)\r",
    "\r",
    "<< [nt:folder] > nt:hierarchyNode\r",
    "<<   + * (nt:hierarchyNode) version\r",
    "\r",
    "<< [cq:WidgetCollection] > nt:unstructured\r",
    "<<   orderable\r",
    "<<   + * (cq:Widget) = cq:Widget\r",
    "\r",
    "<< [cq:InplaceEditingConfig] > nt:unstructured\r",
    "<<   orderable\r",
    "<<   - editorType (string)\r",
    "<<   - configPath (string)\r",
    "<<   - active (boolean)\r",
    "<<   + config (nt:unstructured) = nt:unstructured\r",
    "\r",
    "<< [cq:Page] > nt:hierarchyNode\r",
    "<<   orderable primaryitem jcr:content\r",
    "<<   + * (nt:base) = nt:base version\r",
    "<<   + jcr:content (nt:base) = nt:unstructured\r",
    "\r",
    "<< [sling:OrderedFolder] > sling:Folder\r",
    "<<   orderable\r",
    "<<   + * (nt:base) = sling:OrderedFolder version\r",
    "\r",
    "<< [cq:Template] > mix:title, nt:hierarchyNode\r",
    "<<   - allowedParents (string) multiple\r",
    "<<   - allowedChildren (string) multiple\r",
    "<<   - ranking (long)\r",
    "<<   - * (undefined) multiple\r",
    "<<   - * (undefined)\r",
    "<<   + * (nt:base) = nt:base multiple version\r",
    "<<   + icon.png (nt:file)\r",
    "<<   + thumbnail.png (nt:file)\r",
    "<<   + workflows (nt:base)\r",
    "<<   + jcr:content (nt:base)\r",
    "\r",
    "<< [mix:title]\r",
    "<<   mixin\r",
    "<<   - jcr:description (string)\r",
    "<<   - jcr:title (string)\r",
    "\r",
    "<< [cq:Widget] > nt:unstructured\r",
    "<<   orderable\r",
    "<<   - xtype (string)\r",
    "<<   - title (string)\r",
    "<<   - name (string)\r",
    "<<   + items (nt:base) = cq:WidgetCollection\r",
    "\r",
    "<< [cq:DropTargetConfig] > nt:unstructured\r",
    "<<   orderable\r",
    "<<   - propertyName (string)\r",
    "<<   - accept (string) multiple\r",
    "<<   - groups (string) multiple\r",
    "<<   + parameters (nt:base) = nt:unstructured\r",
    "\r",
    "<< [cq:EditConfig] > nt:hierarchyNode, nt:unstructured\r",
    "<<   orderable\r",
    "<<   - cq:dialogMode (string) < 'auto', 'floating', 'inline'\r",
    "<<   - cq:layout (string) < 'editbar', 'rollover', 'auto'\r",
    "<<   - cq:actions (string) multiple\r",
    "<<   - cq:emptyText (string)\r",
    "<<   - cq:inherit (boolean)\r",
    "<<   + cq:formParameters (nt:base) = nt:unstructured\r",
    "<<   + cq:actionConfigs (nt:base) = nt:unstructured\r",
    "<<   + cq:dropTargets (nt:base) = nt:unstructured\r",
    "<<   + cq:inplaceEditing (cq:InplaceEditingConfig) = cq:InplaceEditingConfig\r",
    "<<   + cq:listeners (nt:base) = cq:EditListenersConfig\r",
    "\r",
    "<< [cq:EditListenersConfig]\r",
    "<<   - afteredit (string)\r",
    "<<   - aftermove (string)\r",
    "<<   - afterinsert (string)\r",
    "<<   - * (undefined) multiple\r",
    "<<   - aftercreate (string)\r",
    "<<   - afterremove (string)\r",
    "<<   - * (undefined)\r",
    "<<   - afterdelete (string)\r",
    "<<   + * (nt:base) = nt:base multiple version\r",
    "\r",
    "<< [cq:ClientLibraryFolder] > sling:Folder\r",
    "<<   - channels (string) multiple\r",
    "<<   - categories (string) multiple\r",
    "<<   - dependencies (string) multiple\r",
    "<<   - embed (string) multiple\r",
    "\r",
    "<< [cq:PageContent] > cq:OwnerTaggable, cq:ReplicationStatus, mix:created, mix:title, nt:unstructured, sling:Resource, sling:VanityPath\r",
    "<<   orderable\r",
    "<<   - pageTitle (string)\r",
    "<<   - cq:lastModified (date)\r",
    "<<   - jcr:language (string)\r",
    "<<   - offTime (date)\r",
    "<<   - cq:lastModifiedBy (string)\r",
    "<<   - hideInNav (boolean)\r",
    "<<   - cq:designPath (string)\r",
    "<<   - cq:template (string)\r",
    "<<   - onTime (date)\r",
    "<<   - navTitle (string)\r",
    "<<   - cq:allowedTemplates (string) multiple\r",
    "\r",
    "<< [sling:Resource]\r",
    "<<   mixin\r",
    "<<   - sling:resourceType (string)\r",
    "\r",
    "<< [cq:OwnerTaggable] > cq:Taggable\r",
    "<<   mixin\r",
    "\r",
    "<< [cq:Taggable]\r",
    "<<   mixin\r",
    "<<   - cq:tags (string) multiple\r",
    "\r",
    "<< [cq:ReplicationStatus]\r",
    "<<   mixin\r",
    "<<   - cq:lastPublishedBy (string) ignore\r",
    "<<   - cq:lastReplicatedBy (string) ignore\r",
    "<<   - cq:lastReplicationAction (string) ignore\r",
    "<<   - cq:lastReplicationStatus (string) ignore\r",
    "<<   - cq:lastPublished (date) ignore\r",
    "<<   - cq:lastReplicated (date) ignore\r",
    "\r",
    "<< [cq:EditListenersConfig]\r",
    "<<   - afteredit (string)\r",
    "<<   - aftermove (string)\r",
    "<<   - afterinsert (string)\r",
    "<<   - * (undefined) multiple\r",
    "<<   - aftercreate (string)\r",
    "<<   - afterremove (string)\r",
    "<<   - * (undefined)\r",
    "<<   - afterdelete (string)\r",
    "<<   + * (nt:base) = nt:base multiple version\r",
    "\r",
    "<< [cq:Panel] > cq:Widget\r",
    "<<   orderable\r",
    "\r",
    "<< [cq:Dialog] > cq:Widget\r",
    "<<   orderable\r",
    "\r",
    "<< [nt:resource] > mix:lastModified, mix:mimeType, mix:referenceable\r",
    "<<   primaryitem jcr:data\r",
    "<<   - jcr:data (binary) mandatory\r",
    "\r",
    "<< [mix:lastModified]\r",
    "<<   mixin\r",
    "<<   - jcr:lastModified (date) autocreated\r",
    "<<   - jcr:lastModifiedBy (string) autocreated\r",
    "\r",
    "<< [mix:mimeType]\r",
    "<<   mixin\r",
    "<<   - jcr:encoding (string)\r",
    "<<   - jcr:mimeType (string)\r",
    "\r",
    "<< [mix:referenceable]\r",
    "<<   mixin\r",
    "<<   - jcr:uuid (string) mandatory autocreated protected initialize\r",
    "\r",
    "<< [oak:Unstructured]\r",
    "<<   - * (undefined)\r",
    "<<   - * (undefined) multiple\r",
    "<<   + * (nt:base) = oak:Unstructured version\r",
    "\r",
    "<< [rep:GrantACE] > rep:ACE\r",
    "\r",
    "<< [rep:ACE]\r",
    "<<   - rep:principalName (string) mandatory protected\r",
    "<<   - rep:privileges (name) mandatory protected multiple\r",
    "<<   - rep:nodePath (path) protected\r",
    "<<   - rep:glob (string) protected\r",
    "<<   - * (undefined) protected\r",
    "<<   + rep:restrictions (rep:Restrictions) = rep:Restrictions protected\r",
    "\r",
    "<< [rep:Restrictions]\r",
    "<<   - * (undefined) protected\r",
    "<<   - * (undefined) protected multiple\r",
    "\r",
    "<< [cq:Component] > mix:title, nt:folder, sling:ResourceSuperType\r",
    "<<   - * (undefined)\r",
    "<<   - allowedChildren (string) multiple\r",
    "<<   - dialogPath (string)\r",
    "<<   - * (undefined) multiple\r",
    "<<   - cq:isContainer (boolean)\r",
    "<<   - cq:noDecoration (boolean)\r",
    "<<   - cq:cellName (string)\r",
    "<<   - allowedParents (string) multiple\r",
    "<<   - componentGroup (string)\r",
    "<<   + cq:childEditConfig (cq:EditConfig) = cq:EditConfig\r",
    "<<   + design_dialog (nt:base) = nt:unstructured\r",
    "<<   + * (nt:base) = nt:base multiple version\r",
    "<<   + cq:infoProviders (nt:base) = nt:unstructured\r",
    "<<   + virtual (nt:base) = sling:Folder\r",
    "<<   + dialog (nt:base) = nt:unstructured\r",
    "<<   + cq:htmlTag (nt:base) = nt:unstructured\r",
    "<<   + cq:editConfig (cq:EditConfig) = cq:EditConfig\r",
    "<<   + icon.png (nt:file)\r",
    "<<   + thumbnail.png (nt:file)\r",
    "\r",
    "<< [sling:ResourceSuperType]\r",
    "<<   mixin\r",
    "<<   - sling:resourceSuperType (string)\r",
    "\r",
    "<< [rep:ACL] > rep:Policy\r",
    "<<   orderable\r",
    "<<   + * (rep:ACE) = rep:GrantACE protected ignore\r",
    "\r",
    "<< [rep:Policy]\r",
    "<<   abstract\r",
    "===>>\r",
    "register nodetypes\r",
    "<<===\r",
    "<< <'sling'='http://sling.apache.org/jcr/sling/1.0'>\r",
    "<< <'nt'='http://www.jcp.org/jcr/nt/1.0'>\r",
    "<< <'mix'='http://www.jcp.org/jcr/mix/1.0'>\r",
    "<< <'jcr'='http://www.jcp.org/jcr/1.0'>\r",
    "<< <'rep'='internal'>\r",
    "<< <'cq'='http://www.day.com/jcr/cq/1.0'>\r",
    "<< <'oak'='http://jackrabbit.apache.org/oak/ns/1.0'>\r",
    "\r",
    "<< [sling:Folder] > nt:folder\r",
    "<<   - * (undefined)\r",
    "<<   - * (undefined) multiple\r",
    "<<   + * (nt:base) = sling:Folder version\r",
    "\r",
    "<< [nt:folder] > nt:hierarchyNode\r",
    "<<   + * (nt:hierarchyNode) version\r",
    "\r",
    "<< [nt:hierarchyNode] > mix:created\r",
    "<<   abstract\r",
    "\r",
    "<< [mix:created]\r",
    "<<   mixin\r",
    "<<   - jcr:createdBy (string) autocreated protected\r",
    "<<   - jcr:created (date) autocreated protected\r",
    "\r",
    "<< [nt:base]\r",
    "<<   abstract\r",
    "<<   - jcr:mixinTypes (name) protected multiple compute\r",
    "<<   - jcr:primaryType (name) mandatory autocreated protected compute\r",
    "\r",
    "<< [rep:AccessControllable]\r",
    "<<   mixin\r",
    "<<   + rep:policy (rep:Policy) protected ignore\r",
    "\r",
    "<< [rep:Policy]\r",
    "<<   abstract\r",
    "\r",
    "<< [nt:unstructured]\r",
    "<<   orderable\r",
    "<<   - * (undefined)\r",
    "<<   - * (undefined) multiple\r",
    "<<   + * (nt:base) = nt:unstructured multiple version\r",
    "\r",
    "<< [rep:AuthorizableFolder] > nt:hierarchyNode\r",
    "<<   + * (rep:AuthorizableFolder) = rep:AuthorizableFolder version\r",
    "<<   + * (rep:Authorizable) = rep:User version\r",
    "\r",
    "<< [rep:User] > rep:Authorizable, rep:Impersonatable\r",
    "<<   - rep:disabled (string) protected\r",
    "<<   - rep:password (string) protected\r",
    "<<   + rep:pwd (rep:Password) = rep:Password protected\r",
    "\r",
    "<< [rep:Authorizable] > mix:referenceable, nt:hierarchyNode\r",
    "<<   abstract\r",
    "<<   - rep:principalName (string) mandatory protected\r",
    "<<   - * (undefined)\r",
    "<<   - * (undefined) multiple\r",
    "<<   - rep:authorizableId (string) protected\r",
    "<<   + * (nt:base) = nt:unstructured version\r",
    "\r",
    "<< [mix:referenceable]\r",
    "<<   mixin\r",
    "<<   - jcr:uuid (string) mandatory autocreated protected initialize\r",
    "\r",
    "<< [rep:Impersonatable]\r",
    "<<   mixin\r",
    "<<   - rep:impersonators (string) protected multiple\r",
    "\r",
    "<< [rep:Password]\r",
    "<<   - * (undefined) protected multiple\r",
    "<<   - * (undefined) protected\r",
    "\r",
    "<< [nt:file] > nt:hierarchyNode\r",
    "<<   primaryitem jcr:content\r",
    "<<   + jcr:content (nt:base) mandatory\r",
    "\r",
    "<< [nt:folder] > nt:hierarchyNode\r",
    "<<   + * (nt:hierarchyNode) version\r",
    "\r",
    "<< [rep:SystemUser] > rep:User\r",
    "\r",
    "<< [cq:Page] > nt:hierarchyNode\r",
    "<<   orderable primaryitem jcr:content\r",
    "<<   + * (nt:base) = nt:base version\r",
    "<<   + jcr:content (nt:base) = nt:unstructured\r",
    "\r",
    "<< [sling:OrderedFolder] > sling:Folder\r",
    "<<   orderable\r",
    "<<   + * (nt:base) = sling:OrderedFolder version\r",
    "\r",
    "<< [rep:Restrictions]\r",
    "<<   - * (undefined) protected\r",
    "<<   - * (undefined) protected multiple\r",
    "\r",
    "<< [cq:ClientLibraryFolder] > sling:Folder\r",
    "<<   - channels (string) multiple\r",
    "<<   - categories (string) multiple\r",
    "<<   - dependencies (string) multiple\r",
    "<<   - embed (string) multiple\r",
    "\r",
    "<< [cq:PageContent] > cq:OwnerTaggable, cq:ReplicationStatus, mix:created, mix:title, nt:unstructured, sling:Resource, sling:VanityPath\r",
    "<<   orderable\r",
    "<<   - pageTitle (string)\r",
    "<<   - cq:lastModified (date)\r",
    "<<   - jcr:language (string)\r",
    "<<   - offTime (date)\r",
    "<<   - cq:lastModifiedBy (string)\r",
    "<<   - hideInNav (boolean)\r",
    "<<   - cq:designPath (string)\r",
    "<<   - cq:template (string)\r",
    "<<   - onTime (date)\r",
    "<<   - navTitle (string)\r",
    "<<   - cq:allowedTemplates (string) multiple\r",
    "\r",
    "<< [sling:Resource]\r",
    "<<   mixin\r",
    "<<   - sling:resourceType (string)\r",
    "\r",
    "<< [sling:VanityPath]\r",
    "<<   mixin\r",
    "<<   - sling:vanityOrder (long)\r",
    "<<   - sling:redirect (boolean)\r",
    "<<   - sling:vanityPath (string) multiple\r",
    "<<   - sling:redirectStatus (long)\r",
    "\r",
    "<< [cq:OwnerTaggable] > cq:Taggable\r",
    "<<   mixin\r",
    "\r",
    "<< [cq:Taggable]\r",
    "<<   mixin\r",
    "<<   - cq:tags (string) multiple\r",
    "\r",
    "<< [cq:ReplicationStatus]\r",
    "<<   mixin\r",
    "<<   - cq:lastPublishedBy (string) ignore\r",
    "<<   - cq:lastReplicatedBy (string) ignore\r",
    "<<   - cq:lastReplicationAction (string) ignore\r",
    "<<   - cq:lastReplicationStatus (string) ignore\r",
    "<<   - cq:lastPublished (date) ignore\r",
    "<<   - cq:lastReplicated (date) ignore\r",
    "\r",
    "<< [mix:title]\r",
    "<<   mixin\r",
    "<<   - jcr:description (string)\r",
    "<<   - jcr:title (string)\r",
    "\r",
    "<< [mix:versionable] > mix:referenceable, mix:simpleVersionable\r",
    "<<   mixin\r",
    "<<   - jcr:predecessors (reference) mandatory protected multiple ignore < 'nt:version'\r",
    "<<   - jcr:mergeFailed (reference) protected multiple abort < 'nt:version'\r",
    "<<   - jcr:configuration (reference) protected ignore < 'nt:configuration'\r",
    "<<   - jcr:activity (reference) protected < 'nt:activity'\r",
    "<<   - jcr:versionHistory (reference) mandatory protected ignore < 'nt:versionHistory'\r",
    "<<   - jcr:baseVersion (reference) mandatory protected ignore < 'nt:version'\r",
    "\r",
    "<< [mix:simpleVersionable]\r",
    "<<   mixin\r",
    "<<   - jcr:isCheckedOut (boolean) = 'true' mandatory autocreated protected ignore\r",
    "\r",
    "<< [oak:Unstructured]\r",
    "<<   - * (undefined)\r",
    "<<   - * (undefined) multiple\r",
    "<<   + * (nt:base) = oak:Unstructured version\r",
    "\r",
    "<< [rep:GrantACE] > rep:ACE\r",
    "\r",
    "<< [rep:ACE]\r",
    "<<   - rep:principalName (string) mandatory protected\r",
    "<<   - rep:privileges (name) mandatory protected multiple\r",
    "<<   - rep:nodePath (path) protected\r",
    "<<   - rep:glob (string) protected\r",
    "<<   - * (undefined) protected\r",
    "<<   + rep:restrictions (rep:Restrictions) = rep:Restrictions protected\r",
    "\r",
    "<< [rep:ACL] > rep:Policy\r",
    "<<   orderable\r",
    "<<   + * (rep:ACE) = rep:GrantACE protected ignore\r",
    "===>>\r",
    "create service user acs-commons-bulk-workflow-service with path system/acs-commons\r",
    "create service user acs-commons-shared-component-props-service with path system/acs-commons\r",
    "create service user acs-commons-review-task-asset-mover-service with path system/acs-commons\r",
    "create service user acs-commons-twitter-updater-service with path system/acs-commons\r",
    "create service user acs-commons-remote-assets-service with path system/acs-commons\r",
    "create service user acs-commons-form-helper-service with path system/acs-commons\r",
    "create service user acs-commons-manage-redirects-service with path system/acs-commons\r",
    "create service user acs-commons-email-service with path system/acs-commons\r",
    "create service user acs-commons-httpcache-jcr-storage-service with path system/acs-commons\r",
    "create service user acs-commons-component-error-handler-service with path system/acs-commons\r",
    "create service user acs-commons-manage-controlled-processes-service with path system/acs-commons\r",
    "create service user acs-commons-error-page-handler-service with path system/acs-commons\r",
    "create service user acs-commons-system-notifications-service with path system/acs-commons\r",
    "create path /var/acs-commons/httpcache\r",
    "create path /var/acs-commons/mcp\r",
    "create path /content/dam\r",
    "create path /etc/acs-commons/bulk-workflow-manager\r",
    "create path /etc/acs-commons/notifications\r",
    "create path /etc/notification/email\r",
    "create path /apps\r",
    "set ACL for acs-commons-email-service\r",
    "    allow jcr:read on /etc/notification/email\r",
    "end\r",
    "set ACL for acs-commons-review-task-asset-mover-service\r",
    "    allow jcr:read,jcr:versionManagement,rep:write on /content/dam\r",
    "end\r",
    "set ACL for acs-commons-error-page-handler-service\r",
    "    allow jcr:read on /content\r",
    "end\r",
    "set ACL for acs-commons-component-error-handler-service\r",
    "    allow jcr:read on /apps\r",
    "    allow jcr:read on /content\r",
    "end\r",
    "set ACL for acs-commons-bulk-workflow-service\r",
    "    allow jcr:read,jcr:modifyProperties on /etc/acs-commons/bulk-workflow-manager\r",
    "end\r",
    "set ACL for acs-commons-twitter-updater-service\r",
    "    allow jcr:read,jcr:modifyProperties,crx:replicate on /content\r",
    "end\r",
    "set ACL for acs-commons-httpcache-jcr-storage-service\r",
    "    allow jcr:read,rep:write on /var/acs-commons/httpcache\r",
    "end\r",
    "set ACL for acs-commons-manage-controlled-processes-service\r",
    "    allow jcr:all on /var/acs-commons/mcp\r",
    "end\r",
    "set ACL for acs-commons-system-notifications-service\r",
    "    allow jcr:read on /etc/acs-commons/notifications\r",
    "end\r",
    "set ACL for acs-commons-shared-component-props-service\r",
    "    allow jcr:read on /apps\r",
    "end\r"
  ],
  "api-regions:JSON|false":[
    {
      "name":"global",
      "exports":[
        "com.sscp.core.filters",
        "com.sscp.core.listeners",
        "com.sscp.core.models",
        "com.sscp.core.schedulers",
        "com.sscp.core.servlets",
        "com.sscp.core.support.components",
        "com.sscp.core.support.sightly",
        "dev.aemvite.aem.utilities",
        "org.apache.commons.text",
        "org.apache.commons.text.diff",
        "org.apache.commons.text.io",
        "org.apache.commons.text.lookup",
        "org.apache.commons.text.matcher",
        "org.apache.commons.text.numbers",
        "org.apache.commons.text.similarity",
        "org.apache.commons.text.translate",
        "org.jsoup",
        "org.jsoup.examples",
        "org.jsoup.helper",
        "org.jsoup.internal",
        "org.jsoup.nodes",
        "org.jsoup.parser",
        "org.jsoup.safety",
        "org.jsoup.select",
        "com.adobe.acs.commons.adobeio.service",
        "com.adobe.acs.commons.analysis.jcrchecksum",
        "com.adobe.acs.commons.assets",
        "com.adobe.acs.commons.audit_log_search",
        "com.adobe.acs.commons.ccvar",
        "com.adobe.acs.commons.ccvar.filter",
        "com.adobe.acs.commons.ccvar.util",
        "com.adobe.acs.commons.cloudconfig",
        "com.adobe.acs.commons.components.longformtext",
        "com.adobe.acs.commons.cqsearch",
        "com.adobe.acs.commons.dam",
        "com.adobe.acs.commons.dam.audio",
        "com.adobe.acs.commons.data",
        "com.adobe.acs.commons.designer",
        "com.adobe.acs.commons.email",
        "com.adobe.acs.commons.errorpagehandler",
        "com.adobe.acs.commons.fam",
        "com.adobe.acs.commons.fam.actions",
        "com.adobe.acs.commons.fam.mbean",
        "com.adobe.acs.commons.filefetch",
        "com.adobe.acs.commons.forms",
        "com.adobe.acs.commons.forms.components",
        "com.adobe.acs.commons.forms.helpers",
        "com.adobe.acs.commons.functions",
        "com.adobe.acs.commons.genericlists",
        "com.adobe.acs.commons.granite.ui.components",
        "com.adobe.acs.commons.http",
        "com.adobe.acs.commons.http.injectors",
        "com.adobe.acs.commons.httpcache.config",
        "com.adobe.acs.commons.httpcache.engine",
        "com.adobe.acs.commons.httpcache.exception",
        "com.adobe.acs.commons.httpcache.invalidator",
        "com.adobe.acs.commons.httpcache.invalidator.event",
        "com.adobe.acs.commons.httpcache.keys",
        "com.adobe.acs.commons.httpcache",
        "com.adobe.acs.commons.httpcache.rule",
        "com.adobe.acs.commons.httpcache.store",
        "com.adobe.acs.commons.httpcache.util",
        "com.adobe.acs.commons.i18n",
        "com.adobe.acs.commons.images",
        "com.adobe.acs.commons.indesign.dynamicdeckdynamo.constants",
        "com.adobe.acs.commons.indesign.dynamicdeckdynamo.exception",
        "com.adobe.acs.commons.indesign.dynamicdeckdynamo.models",
        "com.adobe.acs.commons.indesign.dynamicdeckdynamo.services",
        "com.adobe.acs.commons.indesign.dynamicdeckdynamo.utils",
        "com.adobe.acs.commons.json",
        "com.adobe.acs.commons.marketo",
        "com.adobe.acs.commons.marketo.client",
        "com.adobe.acs.commons.mcp",
        "com.adobe.acs.commons.mcp.form",
        "com.adobe.acs.commons.mcp.form.workflow",
        "com.adobe.acs.commons.mcp.mbean",
        "com.adobe.acs.commons.mcp.model",
        "com.adobe.acs.commons.mcp.util",
        "com.adobe.acs.commons.models.injectors.annotation",
        "com.adobe.acs.commons.notifications",
        "com.adobe.acs.commons.oak",
        "com.adobe.acs.commons.ondeploy",
        "com.adobe.acs.commons.ondeploy.scripts",
        "com.adobe.acs.commons.packaging",
        "com.adobe.acs.commons.packaging.util",
        "com.adobe.acs.commons.quickly",
        "com.adobe.acs.commons.quickly.operations",
        "com.adobe.acs.commons.quickly.results",
        "com.adobe.acs.commons.redirectmaps.models",
        "com.adobe.acs.commons.redirectmaps",
        "com.adobe.acs.commons.redirects",
        "com.adobe.acs.commons.redirects.filter",
        "com.adobe.acs.commons.redirects.models",
        "com.adobe.acs.commons.redirects.servlets",
        "com.adobe.acs.commons.remoteassets",
        "com.adobe.acs.commons.replication",
        "com.adobe.acs.commons.replication.dispatcher",
        "com.adobe.acs.commons.replication.packages.automatic",
        "com.adobe.acs.commons.replication.packages.automatic.model",
        "com.adobe.acs.commons.replication.status",
        "com.adobe.acs.commons.reports.api",
        "com.adobe.acs.commons.reports.models",
        "com.adobe.acs.commons.rewriter",
        "com.adobe.acs.commons.social.linkedin",
        "com.adobe.acs.commons.sorter",
        "com.adobe.acs.commons.synth",
        "com.adobe.acs.commons.synth.children",
        "com.adobe.acs.commons.throttling",
        "com.adobe.acs.commons.twitter",
        "com.adobe.acs.commons.util",
        "com.adobe.acs.commons.util.datadefinitions",
        "com.adobe.acs.commons.util.mbeans",
        "com.adobe.acs.commons.util.visitors",
        "com.adobe.acs.commons.version",
        "com.adobe.acs.commons.version.model",
        "com.adobe.acs.commons.wcm",
        "com.adobe.acs.commons.wcm.comparisons",
        "com.adobe.acs.commons.wcm.comparisons.lines",
        "com.adobe.acs.commons.wcm.comparisons.model",
        "com.adobe.acs.commons.wcm.datasources",
        "com.adobe.acs.commons.wcm.notifications",
        "com.adobe.acs.commons.wcm.properties.shared",
        "com.adobe.acs.commons.wcm.tags",
        "com.adobe.acs.commons.wcm.tags.wcmmode",
        "com.adobe.acs.commons.wcm.vanity",
        "com.adobe.acs.commons.widgets",
        "com.adobe.acs.commons.workflow",
        "com.adobe.acs.commons.workflow.bulk.execution",
        "com.adobe.acs.commons.workflow.bulk.execution.model",
        "com.adobe.acs.commons.workflow.bulk",
        "com.adobe.acs.commons.workflow.bulk.removal",
        "com.adobe.acs.commons.workflow.process",
        "com.adobe.acs.commons.workflow.synthetic",
        "com.adobe.acs.commons.workflow.synthetic.cq",
        "com.adobe.acs.commons.workflow.synthetic.granite",
        "com.adobe.acs.commons.wrap.jackrabbit",
        "com.adobe.acs.commons.wrap.jcr",
        "com.adobe.acs.commons.xss"
      ]
    }
  ]
}