import { ComponentMeta } from '@storybook/react';
import { THEMES } from '@/storybook/preview';

import { Form, Formik } from 'formik';
import React, { useCallback, useState, useMemo } from 'react';

import FormLabel from '../Label';

import DropdownWithFilter from './DropdownWithFilter';

export default {
  title: 'Foundations/Form Elements/Dropdown with filter',
  component: DropdownWithFilter,
} as ComponentMeta<typeof DropdownWithFilter>;

export const Example = (args, { globals: { site } }) => {
  const Theme = THEMES?.[site] ?? THEMES.Toyota;
  const [selectedOption, setSelectedOption] = useState(null);

  // When defined will take each option and generate a string used in the filtering process.
  // getFilterOptionString(option: MenuOption) => string
  // By default, the stringified version of what is generated by getOptionLabel, if definded, or the option's label as a fallback.
  // The MenuOption typed parameter that getFilterOptionString accepts contains a data property that represents the objects that comprise your options property.

  return (
    <Theme>
      <Formik
        initialValues={{
          input: '',
        }}
        onSubmit={(values) => {
          console.log(values);
        }}
        validateOnBlur={true}
        validateOnChange={true}
        validateOnMount={false}
      >
        {({ setFieldValue }) => {
          const getOptionValue = useCallback((option): number => option.id, []);
          const onOptionChange = useCallback((option): void => {
            setSelectedOption(option);
            setFieldValue('input', option);
          }, []);
          const getOptionLabel = useCallback(
            (option): string => `${option.address}, ${option.city}, ${option.state}`,
            [],
          );
          return (
            <Form>
              <FormLabel htmlFor="input">{args.label}</FormLabel>
              <DropdownWithFilter
                getOptionLabel={getOptionLabel}
                getOptionValue={getOptionValue}
                name={'input'}
                onOptionChange={onOptionChange}
                selectedOption={selectedOption}
                {...args}
              />
            </Form>
          );
        }}
      </Formik>
      <div style={{ border: '2px solid lightpink', padding: '20px', marginTop: '20px', fontFamily: 'monospace' }}>
        {`Selected Option: ${JSON.stringify(selectedOption || {})}  <- for debugging`} <br />
        <br />
        <b>
          Notes: <br /> use key D to show control menu{' '}
        </b>
      </div>
    </Theme>
  );
};

Example.storyName = 'Dropdown with filter';
Example.args = {
  description: 'Description goes here',
  isClearable: true,
  isLoading: false,
  isSearchable: true,
  label: 'label',
  options: [
    { id: 1, address: '121 West Cresent red', city: 'Mascot', state: 'NSW' },
    { id: 2, address: '122 West Cresent blue', city: 'Abbortford', state: 'NSW' },
    { id: 3, address: '123 West Cresent yellow', city: 'Sydney', state: 'NSW' },
    { id: 4, address: '124 West Cresent green', city: 'Chatswood', state: 'NSW' },
    { id: 5, address: '125 West Cresent purple', city: 'North Sydney', state: 'NSW' },
    { id: 6, address: '126 West street white', city: 'Richmond', state: 'VIC' },
    { id: 7, address: '127 West street pink', city: 'Chatstone', state: 'VIC' },
    { id: 8, address: '128 West street mustard', city: 'Dockland', state: 'VIC' },
    { id: 9, address: '129 West street black', city: 'South Yarra', state: 'VIC' },
  ],
  placeholder: 'Placeholder',
};
